# Module manifest V2
# This file defines the core behaviour and metadata for the module.

# name: Unique task name displayed in the UI.
name: My New Task

# module_type: Module type matching the directory name.
module_type: template

# enabled: Controls whether the task is enabled by default.
enabled: true

# debug: Enables verbose logging by default when set to true.
debug: false

# retry: Configure automatic retries for recoverable failures.
retry:
  # max_attempts: Total execution attempts including the first run.
  max_attempts: 3
  # backoff_strategy: 'fixed' keeps the interval constant, 'exponential'
  # multiplies the interval by backoff_multiplier after each failure.
  backoff_strategy: exponential
  # backoff_interval_seconds: Base delay before retrying a failed attempt.
  backoff_interval_seconds: 5
  # backoff_multiplier: Growth factor when using exponential backoff.
  backoff_multiplier: 2
  # backoff_max_interval_seconds: Optional cap for the retry delay.
  backoff_max_interval_seconds: 60

# trigger: Defines how the task is triggered.
# The trigger can be 'schedule' (time-based) or 'event' (event-driven).
trigger:
  # --- Example 1: Time-based scheduler ---
  # Use 'schedule' to run the task at fixed intervals or according to a cron expression.
  # Suitable for periodic background tasks such as data synchronisation or health checks.
  type: schedule
  config:
    # type can be either 'interval' or 'cron'.
    type: interval
    # Supported interval units: 'seconds', 'minutes', 'hours', 'days'.
    minutes: 5
  # --- Example 2: Event-driven trigger ---
  # Use 'event' to listen for system events and execute the task when they occur.
  # Ideal for reactive scenarios such as responding when a user uploads a file.
  # type: event
  # config:
  #   topic: "user/file_uploaded"
  #   max_hops: 5  # Optional: limit the maximum hop count to prevent loops.

# inputs: Describe the payload data required when the task runs.
inputs:
  # Keys represent input field names.
  user_id:
    # description: Field description shown in the UI.
    description: "Unique identifier for the user who triggered this task."
    # required: When true, the system validates that the payload contains the field before execution.
    # If validation fails, the task will not run and an error is recorded.
    # This ensures the task receives the necessary data.
    required: true
    # default: Fallback value when the payload omits this field.
    # Only used when 'required' is false.
    default: "guest"
  message:
    description: "Message content to process."
    required: false

# settings: Define module-specific configuration parameters.
# These values remain constant throughout the task lifecycle unless updated manually.
settings:
  example_setting: "Hello, World!"
  api_key: "YOUR_API_KEY_HERE"

# assets/copy_files: Declare additional resources to copy from the module directory during instantiation.
# List files or subdirectories using relative paths; the directory structure is preserved.
# Example:
# assets:
#   copy_files:
#     - resources/credentials.json
#     - templates/email/
assets:
  copy_files: []
